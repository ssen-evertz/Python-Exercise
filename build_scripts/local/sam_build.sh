#!/bin/bash

echo "started at $(date +"%T.%N")"

set -e

usage() { echo "Usage: $0 COMMAND" 1>&2; exit 1; }

export PACKAGE_DIR=./python_exercise
export TEMPLATE_FOLDER="templates"

if [ "$PIPENV_ACTIVE" != "1" ]; then
    echo "You must activate a pipenv shell before building"
    exit 1;
fi

# Find aws profile env variable
echo "evertz.io CD profile = ${AWS_EIO_CD_PROFILE}"
if [ -z "${AWS_EIO_CD_PROFILE}" ]; then
    echo "Make sure the environment variable AWS_EIO_CD_PROFILE is set correctly with a profile name for evertz.io build account" 1>&2; exit 1
fi
# Get CodeArtifact token
export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain evertz-io --domain-owner 737710810646 \
                        --query authorizationToken --output text --region us-east-1 --profile $AWS_EIO_CD_PROFILE`
if [ -z ${CODEARTIFACT_AUTH_TOKEN} ]; then
        echo "Could not get token for codeartifact, are you logged into AWS?"  1>&2; exit 1
fi
echo "CodeArtifact token = `echo $CODEARTIFACT_AUTH_TOKEN | sed -r 's/^(.{8}).*(.{8})$/\1****************\2/'`"
export PIP_EXTRA_INDEX_URL="https://aws:$CODEARTIFACT_AUTH_TOKEN@evertz-io-737710810646.d.codeartifact.us-east-1.amazonaws.com/pypi/evertz-io-repo/simple/"

build_scripts/run_linters.sh

# Sam uses pip to build so convert the Pipenv file to requirements.txt
# Strip out the options specifying the indexes
pipenv requirements | grep -Ev "^--extra-index-url|^-i|^--index-url" > ${PACKAGE_DIR}/requirements.txt
# Add a warning to indicate this is a transient file.
sed -i '1s/^/# DO NOT EDIT THIS FILE, USE "Pipfile".\n# THIS FILE IS TRANSIENT AND WILL BE OVERWRITTEN ON PROJECT BUILD.\n\n/' ${PACKAGE_DIR}/requirements.txt

sam build --template-file ${TEMPLATE_FOLDER}/template.yaml

echo "finished at $(date +"%T.%N")"
